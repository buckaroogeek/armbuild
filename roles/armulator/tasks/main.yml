---
# tasks file for armulator

- name: define a libvirt bridge network
  virt_net:
    command: define
    name: bridge0
    xml: '{{ lookup("template", "templates/network.xml.j2") }}'

- name: start the libvirt network
  virt_net:
    command: create
    name: bridge0

- name: Find the kernel that just got extracted
  find:
    paths: "{{ kernelpath }}"
    file_type: file
    use_regex: yes
    patterns: ['^vmlinuz.*']
  register: kernels


- debug: var=kernels

- name: Find the initramfs that just got extracted
  find:
    paths: "{{ kernelpath }}"
    file_type: file
    use_regex: yes
    patterns: ['^initramfs.*']
  register: initramfs
- debug: var=initramfs

#- name: Install a libvirt VM based on the image
#  vars:
#    kernel: "{{ initramfs.files.0.path }}"
#    initrd: "{{ kernels.files.0.path }}"
#    image: "{{ workpath }}/{{ download.dest }}"
#  virt:
#    command: define
#    xml: "{{ lookup('template', 'vm_template.xml.j2') }}"
#    autostart: yes

#- name: start vm
#  virt:
#    name: ansible-spawn
#    state: running

#- name: Wait for build to complete
#  delegate_to: "192.168.122.240"
#  wait_for_connection:
#    delay: 30
#    timeout: 3600
#    sleep: 10
#
#- debug: msg="complete"
#   command: "arm-image-installer --image=/var/lib/libvirt/images/Fedora-Server-armhfp-32-{{ date }}.n.1-sda.raw --target=rpi4"


